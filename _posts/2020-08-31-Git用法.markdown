---
layout: post
title:  "Git 用法"
categories: git
tags: programming git learning
author: JosephRowing
mathjax: true
---
* content
{:toc}
过了将近两年的时间，终于又重新拾起[廖雪峰的教程](https://www.liaoxuefeng.com/wiki/896043488029600)来学习。还依稀记得原本看的云里雾里，经过两年的经历之后，花了3个小时，终于能较完整地把整篇看下来了。感慨结束，下面给出我对git日常使用方法的简单总结。

# 有用的资源
- [git官方网站](https://git-scm.com/)
- [Pro Git](https://git-scm.com/book/en/v2)

# 基本概念
## 工作区、缓存区、提交
+ 工作区（Working Directory）
+ 缓存区（Stage）
+ 提交（commited, branch, tag）

## 正常的工作流程
工作区修改，add到缓存区，再commit。

## 提交、分支
+ 每个commit相当于一个状态的hash
+ 每个branch相当于指向某一个commit的指针

# 常用命令
## 初始化仓库
```
	$ git init
```
## 添加文件到缓冲区
```
	$ git add {file}
```
如：
```
	$ git add readme.md
```
## 提交到仓库
```
	$ git commit
```
## 查看改动状态
```
	$ git status
```
## 查看详细改动状态
```
	$ git diff {file}
```
## 查看日志
```
	$ git log
	$ git log --oneline --graph --decorate --all
```
## 回退到指定版本
```
	$ git reset --hard {commit}
```
## 查看改动日志
```
	$ git reflog
```
## 时光机
+ 撤销工作区修改，此时还没提交到缓冲区
```
	$ git checkout -- {file}
```
+ 已经提交到缓冲区，撤销缓冲区内容
```
	$ git reset HEAD {file}
	$ git checkout -- {file}
```
+ 回退到指定版本
```
	$ git checkout {commit}
	$ git checkout -b {branch_name}
```

## 远程仓库
+ 添加remote并Push到remote origin
```
	$ git remote add origin git@github.com:michaelliao/learngit.git
	$ git push -u origin master // 第一次push加上-u，以后的push就会自动追踪
```

## 分支管理
```
	$ git switch
	$ git switch -c dev
	$ git branch dev
	$ git branch -f master dev
	$ git branch -d dev
	$ git checkout -b dev
	$ git merge
```	

## 标签管理
```
	$ git tags
	$ git checkout tags/v1.0
	$ git tag -d v0.9
```

# Cheat Sheet
写到最后，太困，不想继续写了，直接贴两张命令速查表吧
![error](/data/git-cheatsheet-page-001.jpg)
![error](/data/git-cheatsheet-page-002.jpg)

# TODO
+ 优化一下markdown显示的视图
